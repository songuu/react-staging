#!/usr/bin/env node
import*as e from"node:fs";import t from"node:fs";import*as n from"node:path";import s from"ejs";import i from"minimist";import o from"prompts";import{grey as r,red as c,cyan as a}from"kleur/colors";import{pathToFileURL as l}from"node:url";import p from"path";import{fileURLToPath as m}from"url";const f="yes",y="no";function u(t,s,i){for(const o of e.readdirSync(t)){if(".git"===o)continue;const r=n.resolve(t,o);e.lstatSync(r).isDirectory()?(s(r),e.existsSync(r)&&u(r,s,i)):i(r)}}function d(t,s,i){for(const o of e.readdirSync(t)){if(".git"===o)continue;const r=n.resolve(t,o);e.lstatSync(r).isDirectory()?(d(r,s,i),s(r)):i(r)}}const g=e=>e&&"object"==typeof e,S=(e,t)=>Array.from(new Set([...e,...t]));function v(e,t){for(const n of Object.keys(t)){const s=e[n],i=t[n];Array.isArray(s)&&Array.isArray(i)?e[n]=S(s,i):g(s)&&g(i)?e[n]=v(s,i):e[n]=i}return e}function h(t,s,i){if(e.statSync(t).isDirectory()){if("node_modules"===n.basename(t))return;e.mkdirSync(s,{recursive:!0});for(const o of e.readdirSync(t))h(n.resolve(t,o),n.resolve(s,o),i);return}const o=n.basename(t);if("package.json"===o&&e.existsSync(s)){const n=function(e){const t={},n=["dependencies","devDependencies","peerDependencies","optionalDependencies"];for(const s of n)e[s]&&(t[s]={},Object.keys(e[s]).sort().forEach((n=>{t[s][n]=e[s][n]})));return{...e,...t}}(v(JSON.parse(e.readFileSync(s,"utf8")),JSON.parse(e.readFileSync(t,"utf8"))));e.writeFileSync(s,JSON.stringify(n,null,2)+"\n")}else if(o.startsWith("_")&&(s=n.resolve(n.dirname(s),o.replace(/^_/,"."))),"_gitignore"===o&&e.existsSync(s)){const n=e.readFileSync(s,"utf8"),i=e.readFileSync(t,"utf8");e.writeFileSync(s,n+"\n"+i)}else{if(o.endsWith(".data.mjs"))return s=s.replace(/\.data\.mjs$/,""),void i.push((async e=>{const n=(await import(l(t).toString())).default;e[s]=await n({oldData:e[s]||{}})}));e.copyFileSync(t,s)}}const j=m(import.meta.url),k=p.dirname(j);function b(t){e.existsSync(t)&&d(t,(t=>e.rmdirSync(t)),(t=>e.unlinkSync(t)))}t.realpathSync(process.cwd()),async function(){console.log(`${r("create-staging")}`);const t=process.cwd(),l=i(process.argv.slice(2),{alias:{force:"f",help:"h",version:"v",ts:"typescript",eslint:"e",prettier:"p",husky:"h","lint-staged":"ls","unit-testing":"ut",jest:"j",vitest:"v"},string:["_"],boolean:!0});let p=l._[0];const m=p||"new-project",d=l.force||l.f,g="boolean"==typeof(l.ts||l.typescript||l.eslint||l.prettier||l.husky||l["lint-staged"]||l["unit-testing"]||l.jest||l.vitest);let S={};try{S=await o([{name:"projectName",type:p?null:"text",message:"Project name:",initial:m,onState:e=>p=String(e.value).trim()||m},{name:"needsTypeScript",type:()=>g?null:"toggle",message:"Use TypeScript?",initial:y,active:f,inactive:y},{name:"needsEslint",type:()=>g?null:"toggle",message:"Use ESLint?",initial:y,active:f,inactive:y},{name:"needsPrettier",type:()=>g?null:"toggle",message:"Use Prettier?",initial:y,active:f,inactive:y},{name:"needsHusky",message:"Use Husky?",type:()=>g?null:"toggle",initial:y,active:f,inactive:y},{name:"needsLintStaged",type:()=>g?null:"toggle",message:"Use lint-staged?",initial:y,active:f,inactive:y},{name:"needsUnitTesting",type:()=>g?null:"select",message:"Use unit testing?",hint:"choose a testing framework",initial:0,choices:()=>[{title:"No",value:!1},{title:"Jest",value:"Jest"},{title:"Vitest",value:"Vitest"}]},{name:"managementTool",type:()=>g?null:"select",message:"Use management tool?recommend pnpm.",hint:"choose a management tool",initial:0,choices:()=>[{title:"pnpm",value:"pnpm"},{title:"yarn",value:"yarn"},{title:"npm",value:"npm"}]},{name:"buildTool",type:()=>g?null:"select",message:"Use build tool?recommend vite.",hint:"choose a build tool",initial:0,choices:()=>[{title:"vite",value:"vite"},{title:"webpack",value:"webpack"},{title:"rollup",value:"rollup"}]}])}catch(e){console.log(c("\nOperation cancelled.")),process.exit(1)}const v=S.projectName||m,j=l.ts||l.typescript||S.needsTypeScript;l.eslint||S.needsEslint,l.prettier||S.needsPrettier,l.husky||S.needsHusky,l["lint-staged"]||S.needsLintStaged;const w=l["unit-testing"]||S.needsUnitTesting,F=l.jest||S.needsJest,T=l.vitest||S.needsVitest;S.managementTool;const x=S.buildTool,U=n.join(t,p);d&&e.existsSync(U)?b(U):e.existsSync(U)||e.mkdirSync(U);const J={name:v,version:"1.0.0"};e.writeFileSync(n.resolve(U,"package.json"),JSON.stringify(J,null,2));const N=n.resolve(k,"templates"),O=[],D=function(e){h(n.resolve(N,e),U,O)};if(D("base"),j){D("config/typescript"),D("tsconfig/base");const t={files:[],references:[{path:"./tsconfig.node.json"},{path:"./tsconfig.app.json"}]};F&&(D("tsconfig/jest"),t.references.push({path:"./tsconfig.jest.json"})),T&&(D("tsconfig/vitest"),t.references.push({path:"./tsconfig.vitest.json"})),e.writeFileSync(n.resolve(U,"tsconfig.json"),JSON.stringify(t,null,2)+"\n","utf-8")}w&&(F?D("jest"):T&&D("config/vitest"));const _={};for(const e of O)await e(_);if(console.log(a("\nScaffolding project files..."),_),u(U,(()=>{}),(t=>{if(t.endsWith(".ejs")){const n=e.readFileSync(t,"utf-8"),i=t.replace(/\.ejs$/,""),o=s.render(n,{buildTool:x,needsTypeScript:j});e.writeFileSync(i,o),e.unlinkSync(t)}})),j){u(U,(e=>{}),(t=>{if(t.endsWith(".js")){const n=t.replace(/\.js$/,".ts");e.existsSync(n)?e.unlinkSync(t):e.renameSync(t,n)}else"jsconfig.json"===n.basename(t)&&e.unlinkSync(t)}));const t=n.resolve(U,"index.html"),s=e.readFileSync(t,"utf8");e.writeFileSync(t,s.replace("src/main.js","src/main.ts"))}}().catch((e=>{console.error(e)}));
